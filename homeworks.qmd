# Homeworks {.unnumbered}




## HW-06 {#sec-hw-06}

**Reading**

- [Right to Erasure](https://gdpr-info.eu/art-17-gdpr/) act of GDPR


**Task**

- This HW focuses on the ability to implement techniques to enforce the "right to erase" policy
- Create a branch named _hw06_ of your private repo.
- Treat the model you have built in @sec-hw-04 as your baseline, call it _Model A_
- Imagine the first 10 records were to be erased.
- _Implement_ a strategy s.t those 10 records will not be used in any future predictions. Update the API, and Data and Model cards to reflect this change.
- Suggest a method to implement "right to erasure" such that, even all past predictions that were influenced by the 10 records will be re-scored, and pushed.

**Due by** \
11.59PM IST, Friday, 18th Oct, 2024.

## HW-05 {#sec-hw-05}

**Reading**

- [mlflow](https://mlflow.org/docs/latest/index.html) Read _mlflow_ documentation 
- [kedro-mlflow](https://kedro-mlflow.readthedocs.io/en/stable/) Read _kedro-mlflow_ plug-in documentation

**Task**

- This HW focuses on Model Comparison and Continuous Improvement
- It builds on HW03-04. See instructions for @sec-hw-03, @sec-hw-04. 
- Create a branch named _hw05_ of your private repo.
- Treat the model you have built in @sec-hw-04 as your baseline, call it _Model A_
- A new tranche of data is shared with you on google drive.
- Asses the performance of _Model A_ on this new tranche data. Is the model performing well on all metrics (i.e data drift)?
- Develop an alternate model, call it _Model B_. Run a Hypothesis test to see _Model B_ is better than _Model A_ on new tranche of data shared in your private repo.
- Deploy _Model B_ if the performance is better than _Model A_ on the new tranche of data. Update metadata of the API to reflect the new model version being used to make the predictions.

**Due by** \
11.59PM IST, Tuesday, 24th Sep, 2024.

## HW-04 {#sec-hw-04}

**Reading**

- [mlflow](https://mlflow.org/docs/latest/index.html) Read _mlflow_ documentation 
- [kedro-mlflow](https://kedro-mlflow.readthedocs.io/en/stable/) Read _kedro-mlflow_ plug-in documentation

**Task**

- This HW focuses on Deployment and Monitoring.
- It builds on HW03. See instructions for @sec-hw-03. 
- Create a branch named _hw04_ of your private repo. 
- Make sure that
    - Define the request and response structure of the API. Provide API documentation.
    - Model is deployed and API is available via kedro-mlflow plug-in.
    - Model usage is logged

**Due by** \
11.59PM IST, Friday, 13th Sep, 2024.

## HW-03 {#sec-hw-03}

**Reading**

- [Evidently](https://docs.evidentlyai.com/): Read Evidently, an ML & Data Quality and Monitoring tool.
- Ch 8 of [ML System Design](https://www.oreilly.com/library/view/designing-machine-learning/9781098107956/)
- Blogs from [Great Expectations](https://greatexpectations.io/)

**Task**

- This HW focuses on Data-driven code structure, documentation, code hygiene, testing, and data quality assessment & reporting.
- A Google Drive folder with your _github_ handle is shared. This contains a dataset.
- Create a branch named _hw03_ of your private repo. 
- Similar to the Kedro spaceflights tutorial, write your data loading, model training, and testing, pipeline interms of nodes and pipelines.
 - Make sure that
    - APIs are documented with _quartodoc_
    - Code is linted and formatted (with _ruff_)
    - Nodes and Pipelines are Unit tested (with _PyTest_). 
    - Data Quality and Drift Detection Test suites using Evidently are run and the reports are represented as Plotly nodes in Kedro . 
    - Automated test to detect distribution drift of _target_ variable(represented as _y_ in the dataset) between Train and Test splits is run using Evidently. The pipeline fails if distribution drift is detected.

**Due by** \
11.59PM IST, Friday, 06th Sep, 2024.

## HW-02 {#sec-hw-02}

**Reading**

- Data Cards: Purposeful and Transparent Dataset Documentation for Responsible AI[paper](https://arxiv.org/abs/2204.01075) [blog](https://research.google/blog/the-data-cards-playbook-a-toolkit-for-transparency-in-dataset-documentation/) from Google Research.

**Task**

- Download the [soybean](https://www.openml.org/search?type=data&status=active&id=42) tabular dataset version v1 with dataset id 42 from [openML](https://www.openml.org/search?type=data&status=active). 
- Make sure that a repo is already created (as you would have done in HW-01) with _repo name_ "your first name-ai-839" and git handle _dhavala_ is given read and write access.  
- Create a new branch name _hw02_
- Under notebooks folder, create a new notebook with markdown and cell tags to implement Data Cards.
- Using [pymfe](https://github.com/ealcobaca/pymfe), include some useful properties of the dataset in the Data Card - - Make sure that any changes in the dataset get reflected automatically in the Data Card. Specifically, if the dataset id 1023 (refers to its version v2), Data Card should reflect any changes in the new version of the data. 
- The [CLeAR](https://shorensteincenter.org/clear-documentation-framework-ai-transparency-recommendations-practitioners-context-policymakers/) framework has some really nice goals for a document. A document must be 1) comparable 2) legible 3) actionable and 4) robust to achieve an aspect of AI Transparency. Here we are talking about documenting Data, Models, and AI Systems.

**Due by** \
11.59PM IST, Friday, 23rd August, 2024.

## HW-01 {#sec-hw-01}

**Reading**

- Chip Huyen's Lecture Notes on ML in Production. Intro [here](https://docs.google.com/document/d/1C3dlLmFdYHJmACVkz99lSTUPF4XQbWb_Ah7mPE12Igo/edit#heading=h.a8w2b79yy875)
- [Phase Zero](https://ml-ops.org/content/phase-zero) of MLOps from [ml-ops.org](https://ml-ops.org) blogs. Very useful and nicely done
- [Towards CRISP-ML(Q)](https://arxiv.org/pdf/2003.05155): A Machine Learning Process Model  with QA Methodology
- [Project Canvas](https://madewithml.com/courses/mlops/product-design/#template) from Gokul Mohandas's [course](https://github.com/GokuMohandas/mlops-course)
- [AI Canvas](https://hbr.org/2018/04/a-simple-tool-to-start-making-decisions-with-the-help-of-ai)

**Task**

- Pick your favorite problem. Complete the information required in the [project card template](./resources/project-card.ipynb)
- Create a new kedro project with _repo name_ "your first name-ai-839". Documentation [here](https://docs.kedro.org/en/stable/get_started/new_project.html)
- Push it to github. Give read read/write acces to git handle _dhavala_
- Create a branch "hw01". Under notebooks folder, copy  [project card template](./resources/project-card.ipynb)
- Complete the Project Card, commit and push the notebook to your github (remote) repo.

**Due by** \
11.59PM IST, Tuesday, 13th August, 2024.


